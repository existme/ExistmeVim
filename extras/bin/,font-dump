#!/bin/bash
# This script dumps all characters which are present in a font
if ! [ -e "$@" ]; then
    echo "${bW}Usage: dump-font {font-file-path}$cZ"
    echo "Example:"
    echo "${cR}dump-font ${cY}~/.fonts/NerdFonts/Ubuntu\ Nerd\ Font\ Complete.ttf$cZ"
fi

fast_chr() {
    local __octal
    local __char
    printf -v __octal '%03o' $1
    printf -v __char \\$__octal
    REPLY=$__char
}

function unichr {
    local c=$1    # Ordinal of char
    local l=0    # Byte ctr
    local o=63    # Ceiling
    local p=128    # Accum. bits
    local s=''    # Output string

    (( c < 0x80 )) && { fast_chr "$c"; echo -n "$REPLY"; return; }

    while (( c > o )); do
        fast_chr $(( t = 0x80 | c & 0x3f ))
        s="$REPLY$s"
        (( c >>= 6, l++, p += o+1, o>>=1 ))
    done

    fast_chr $(( t = p | c ))
    echo -n "$REPLY$s   "
}

# export -f unichr
# export -f fast_chr
# otfinfo -u "$@"|cut -d' ' -f1|cut -c 4- |xargs -n 1 -P 10 -I {} bash -c 'unichr 0x"$@"' _ {}

# extrct all unicodes mapped by the specified font
arr=($(otfinfo -u "$@"|cut -d' ' -f1|cut -c 4-))
count=${#arr[@]}

filename=$(basename "$@")
echo "# vim: ft=symbol colorcolumn=140"
echo
echo "$filename [ $count characters ]"
echo "---------------------------------------------------";echo;echo;
## test harness
for (( i=1; i<$count; i++ )); do
    echo -n " "
    export num=0x${arr[$i]}
    unichr $num
    dec=$(($num))
    echo -n "  "
    if [ $(($i%20)) = 0 ]; then
       echo ; echo
    fi
done
