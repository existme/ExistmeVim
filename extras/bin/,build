#!/bin/zsh
# !! It's important to use bash or zsh otherwise reads doesn't work
#
declare selected=$(cat <<EOF
i3
i3-gaps
vim
rofi
quit
EOF
)
function gitPull(){
    local prj=$1
    echo "Compiling ${bY}$prj${cZ}"
    echo "Do you want to pull$bR $prj$cZ located at$cG $HOME/git/$prj$cZ?"
    read -k 1 -r "pr?Ok to pull (${cY}y${cZ}/${bW}N${cZ})?"
    echo
    cd ~/git/$prj

    if [[ $pr =~ ^[Yy]$ ]]; then
        git pull
    else
        echo "${bR}Nothing pulled${cZ}!"
    fi
}
function okToBuild(){
    read -k 1 -r "pr?Ok to build (${cY}y${cZ}/${bW}N${cZ})?"
    echo
    if [[ ! $pr =~ ^[Yy]$ ]]; then
        echo "${bR}Build Cancled${cZ}!"
        return 1
    fi
    echo "${bG}Building${cZ} ..."
    return 0
}
if [ -z "$1" ]; then
   declare res=$(
       echo $selected|tr '\n' '|'|
       rofi -dmenu -sep '|' -p "What project do you want to build? " -i -disable-history -levenshtein-sort -matching normal -e
       )
else
   res=$1
fi

case "$res" in
    i3)
        prj=i3
        gitPull $prj
        if okToBuild; then
            autoreconf -fi
            rm -rf ~/git/$prj/build
            mkdir ~/git/$prj/build
            cd ~/git/$prj/build
            grc ../configure --prefix=/usr --sysconfdir=/etc --disable-sanitizers
            grc make -j8
            grc sudo make install
        fi
    ;;
    i3-gaps)
        prj=i3-gaps
        gitPull $prj
    ;;
    vim)
        prj=vim
        gitPull $prj

        if okToBuild; then
            sudo apt-get -qy remove --purge vim vim-runtime vim-gnome vim-tiny vim-common vim-gui-common
            sudo apt-get -qy build-dep vim-gnome
            sudo apt-get install -qy build-essential liblua5.3-0 liblua5.3-dev python-dev ruby-dev libperl-dev libncurses5-dev libgnome2-dev libgnomeui-dev libgtk2.0-dev libatk1.0-dev libbonoboui2-dev libcairo2-dev libx11-dev libxpm-dev libxt-dev
            sudo rm -rf /usr/local/share/vim /usr/bin/vim /usr/local/bin/vim
            sudo mkdir /usr/include/lua5.3/{include,lib}
            sudo cp /usr/include/lua5.3/*.h /usr/include/lua5.3/include/
            sudo ln -sf /usr/lib/x86_64-linux-gnu/liblua5.3.so /usr/include/lua5.3/lib/liblua.so
            sudo ln -sf /usr/lib/x86_64-linux-gnu/liblua5.3.a /usr/include/lua5.3/lib/liblua.a
            sudo make distclean
            ./configure --with-features=huge \
               --enable-rubyinterp \
               --enable-largefile \
               --disable-netbeans \
               --enable-python3interp \
               --with-python-config-dir=$(python3-config --configdir) \
               --enable-perlinterp \
               --enable-luainterp \
               --enable-gui=auto \
               --enable-fail-if-missing \
               --with-lua-prefix=/usr/include/lua5.3 \
               --enable-cscope \
               --enable-multibyte
            sudo make
            sudo make install
            # sudo apt install checkinstall
            # sudo checkinstall
        fi
    ;;
    rofi)
        prj=rofi
        gitPull $prj
        if okToBuild; then
            git submodule init
            git submodule update
            autoreconf --install
            sudo apt-get install bison flex xutils-dev libxcb-ewmh-dev
            sudo apt-get install librsvg2-dev
            sudo apt-get install textinfo
            # sudo pip install easybuild
            # Install latest version of check
            # https://github.com/libcheck/check.git
            sudo configure
            sudo make install
        fi
    ;;
    quit)
        echo "${bB}Canceled$cZ"
        return
    ;;
esac
echo "${bB}Build script finished.$cZ"
